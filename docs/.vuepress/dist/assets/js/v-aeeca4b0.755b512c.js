(self.webpackChunkjedi_learning_path=self.webpackChunkjedi_learning_path||[]).push([[289],{6033:(e,a,n)=>{"use strict";n.r(a),n.d(a,{data:()=>i});const i={key:"v-aeeca4b0",path:"/foundational/functional-programming/what-is-functional-programming.html",title:"Cos'è la programmazione funzionale",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Principi della programmazione funzionale",slug:"principi-della-programmazione-funzionale",children:[{level:3,title:"Che cos'è un side effects?",slug:"che-cos-e-un-side-effects",children:[]}]},{level:2,title:"Flusso dei dati vs controllo dello stato",slug:"flusso-dei-dati-vs-controllo-dello-stato",children:[]},{level:2,title:"Risorse e approfondimenti",slug:"risorse-e-approfondimenti",children:[]}],filePathRelative:"foundational/functional-programming/what-is-functional-programming.md",git:{updatedTime:1626632416e3,contributors:[{name:"Emanuele Menon",email:"emanuele.menon@facile.it",commits:1}]}}},9243:(e,a,n)=>{"use strict";n.r(a),n.d(a,{default:()=>w});var i=n(6252);const o={id:"cos-e-la-programmazione-funzionale",tabindex:"-1"},r=(0,i.Wm)("a",{class:"header-anchor",href:"#cos-e-la-programmazione-funzionale","aria-hidden":"true"},"#",-1),t=(0,i.Uk)(" Cos'è la programmazione funzionale "),l=(0,i.uE)("<p>Se hai già sentito parlare di <strong>programmazione funzionale</strong> avrai probabilmente anche potuto constatare come questo argomento sia particolarmente dibattuto.</p><p>Per chi si avvicina per la prima volta a questo mondo, potrebbe inizialmente sembrare comlesso, a tratti mistico. E&#39; capitato anche a me, ma tranquillo: all&#39;atto pratico, programmare in funzionale è molto più semplice di quello che può sembrare inizialmente.</p><p>La <strong>programmazione funzionale</strong> altro non è che un modo di scrivere il codice. Un modo di scrivere codice, in gergo, viene chiamato <strong>paradigma</strong>. Altri tipi di paradigmi in cui puoi esserti imbattuto nella tua carriera sono ad esempio il <em>paradigma imperativo</em> o la più famosa <em>programmazione ad oggetti</em>. Esistono molti altri paradigmi, ognuno con le proprie peculiarità e campi di applicazione.</p>",3),s=(0,i.Uk)("Sia chiaro, non si tratta di un nuovo ed avenieristico metodo, la "),m=(0,i.Wm)("strong",null,"programmazione funzionale",-1),u=(0,i.Uk)(" infatti affonda le sue radici negli anni cinquanta, se non acor prima. Il primo vero linguaggio che introduceva concetti funzionali che si possono ritrovare in linguaggi più moderni è il "),p={href:"https://lisp-lang.org/",target:"_blank",rel:"noopener noreferrer"},c=(0,i.Uk)("Lisp"),d=(0,i.Uk)("."),g=(0,i.uE)('<h2 id="principi-della-programmazione-funzionale" tabindex="-1"><a class="header-anchor" href="#principi-della-programmazione-funzionale" aria-hidden="true">#</a> Principi della programmazione funzionale</h2><p>La caratteristica distintiva del <strong>paradigma funzionale</strong> è quella di dover programmare utilizzando solo <strong>funzioni pure</strong>, prive dunque di <strong>side effects</strong>.</p><h3 id="che-cos-e-un-side-effects" tabindex="-1"><a class="header-anchor" href="#che-cos-e-un-side-effects" aria-hidden="true">#</a> Che cos&#39;è un side effects?</h3><p>Possiamo semplificare dicendo che, una funzione che ha un <strong>side effect</strong>, è una funzione che oltre a ritornare un valore, esegue una qualsiasi altra operazione.</p><p>Alcuni esempi di <em>side effect</em> sono:</p><ul><li>modificare uno stato globale</li><li>lanciare un&#39;eccezione</li><li>leggere o scrivere un file</li><li>eseguire una richiesta di rete</li><li>accedere ad uno stato globale</li></ul><p>Dovrebbe rendere l&#39;idea.</p><h2 id="flusso-dei-dati-vs-controllo-dello-stato" tabindex="-1"><a class="header-anchor" href="#flusso-dei-dati-vs-controllo-dello-stato" aria-hidden="true">#</a> Flusso dei dati vs controllo dello stato</h2><p>La programmazione funzionale per essere compresa, richiede un leggero cambio del punto di vista rispetto a come intendiamo un programma. Immagina il tuo programma come ad una serie di funzioni che lavorano su un flusso di dati.</p><p>I dati entrano dall&#39;alto ed attraversando una ad una le funzioni che compongono il tuo algoritmo, escono dal basso. Ogni funzione, in quanto pura e priva di side effects, restituirà un valore, che sarà l&#39;input della funzione successiva.</p><p>Questo concetto è conosciuto come <strong>pipe</strong>.</p>',11),f=(0,i.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,i.Wm)("pre",{class:"language-javascript"},[(0,i.Wm)("code",null,[(0,i.Wm)("span",{class:"token keyword"},"const"),(0,i.Uk)(" program "),(0,i.Wm)("span",{class:"token operator"},"="),(0,i.Uk)(),(0,i.Wm)("span",{class:"token function"},"pipe"),(0,i.Wm)("span",{class:"token punctuation"},"("),(0,i.Uk)("\n  input"),(0,i.Wm)("span",{class:"token punctuation"},","),(0,i.Uk)("\n  function1"),(0,i.Wm)("span",{class:"token punctuation"},","),(0,i.Uk)("\n  function2"),(0,i.Wm)("span",{class:"token punctuation"},","),(0,i.Uk)("\n  function3"),(0,i.Wm)("span",{class:"token punctuation"},","),(0,i.Uk)("\n  "),(0,i.Wm)("span",{class:"token operator"},"..."),(0,i.Uk)("\n"),(0,i.Wm)("span",{class:"token punctuation"},")"),(0,i.Uk)("\n")])]),(0,i.Wm)("div",{class:"line-numbers"},[(0,i.Wm)("span",{class:"line-number"},"1"),(0,i.Wm)("br"),(0,i.Wm)("span",{class:"line-number"},"2"),(0,i.Wm)("br"),(0,i.Wm)("span",{class:"line-number"},"3"),(0,i.Wm)("br"),(0,i.Wm)("span",{class:"line-number"},"4"),(0,i.Wm)("br"),(0,i.Wm)("span",{class:"line-number"},"5"),(0,i.Wm)("br"),(0,i.Wm)("span",{class:"line-number"},"6"),(0,i.Wm)("br"),(0,i.Wm)("span",{class:"line-number"},"7"),(0,i.Wm)("br")])],-1),h=(0,i.Wm)("h2",{id:"risorse-e-approfondimenti",tabindex:"-1"},[(0,i.Wm)("a",{class:"header-anchor",href:"#risorse-e-approfondimenti","aria-hidden":"true"},"#"),(0,i.Uk)(" Risorse e approfondimenti")],-1),W={href:"https://upload.wikimedia.org/wikipedia/commons/f/f7/Programming_paradigms.svg",target:"_blank",rel:"noopener noreferrer"},v=(0,i.Uk)("Overview dei paradigmi di programmazione"),z={href:"https://github.com/gcanti/functional-programming",target:"_blank",rel:"noopener noreferrer"},b=(0,i.Uk)("Introduzione alla programmazione funzionale - Giulio Canti"),k={href:"https://www.youtube.com/watch?v=wyABTfR9UTU",target:"_blank",rel:"noopener noreferrer"},U=(0,i.Uk)("Object Oriented Programming vs Functional Programming"),w={render:function(e,a){const n=(0,i.up)("Badge"),w=(0,i.up)("OutboundLink"),_=(0,i.up)("CodeGroupItem"),q=(0,i.up)("CodeGroup");return(0,i.wg)(),(0,i.j4)(i.HY,null,[(0,i.Wm)("h1",o,[r,t,(0,i.Wm)(n,{type:"warning",text:"WIP",vertical:"middle"})]),l,(0,i.Wm)("p",null,[s,m,u,(0,i.Wm)("a",p,[c,(0,i.Wm)(w)]),d]),g,(0,i.Wm)(q,null,{default:(0,i.w5)((()=>[(0,i.Wm)(_,{title:"javascript"},{default:(0,i.w5)((()=>[f])),_:1})])),_:1}),h,(0,i.Wm)("p",null,[(0,i.Wm)("a",W,[v,(0,i.Wm)(w)])]),(0,i.Wm)("p",null,[(0,i.Wm)("a",z,[b,(0,i.Wm)(w)])]),(0,i.Wm)("p",null,[(0,i.Wm)("a",k,[U,(0,i.Wm)(w)])])],64)}}}}]);